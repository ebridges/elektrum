option_settings:
  aws:ec2:vpc:
    VPCId: vpc-0aa87371d9240294b
    Subnets: subnet-08e442d5d29506984,subnet-0c68abda175b4f434
    ELBSubnets: subnet-08e442d5d29506984,subnet-0c68abda175b4f434
    AssociatePublicIpAddress: true
    ELBScheme: public
  aws:elasticbeanstalk:environment:
    LoadBalancerType: application
  aws:elbv2:loadbalancer:
    AccessLogsS3Bucket: cc.roja.logs
    AccessLogsS3Enabled: true
    AccessLogsS3Prefix: beanstalk-elb
  aws:elasticbeanstalk:environment:process:default:
    DeregistrationDelay: '20'
    HealthCheckInterval: '15'
    HealthCheckPath: /
    HealthCheckTimeout: '5'
    HealthyThresholdCount: '3'
    UnhealthyThresholdCount: '5'
    Port: '80'
    Protocol: HTTP
    StickinessEnabled: true
    StickinessLBCookieDuration: '43200'
  aws:elbv2:listener:443:
    DefaultProcess: https
    ListenerEnabled: true
    Protocol: HTTPS
    SSLCertificateArns: arn:aws:acm:us-east-1:169122179348:certificate/b05e2d74-c5bf-457a-a9fb-7c80379f6429
  aws:elasticbeanstalk:environment:process:https:
    Port: '443'
    Protocol: HTTPS
  aws:autoscaling:asg:
    Availability Zones: Any
    Cooldown: '720'
    Custom Availability Zones: 'us-east-1a,us-east-1b'
    MaxSize: '4'
    MinSize: '2'
  aws:autoscaling:launchconfiguration:
    InstanceType: t2.micro
    SecurityGroups: sg-061b8bad32c88e1a2
    EC2KeyName: roja-llc
    MonitoringInterval: "1 minute"
    IamInstanceProfile: "aws-elasticbeanstalk-ec2-role"

Resources:
  sslSecurityGroupIngress: 
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0
