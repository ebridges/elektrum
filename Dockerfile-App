FROM ubuntu:latest as base

RUN apt-get update
RUN apt-get install -y software-properties-common
RUN add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable
RUN add-apt-repository -y ppa:ubuntu-toolchain-r/ppa
RUN apt-get update
RUN apt-get upgrade -y
RUN apt-get install -y python3.7 \
                       python3.7-dev \
                       python3-pip
RUN apt-get install -y gdal-bin \
                       libgdal-dev

RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 2
RUN cd /usr/local/bin && ln -s /usr/bin/python3 python
RUN mkdir -p /app/project
RUN mkdir -p /app/static
RUN mkdir -p /app/etc/env

ENV PYTHONFAULTHANDLER=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONHASHSEED=random \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    POETRY_VERSION=0.12.11
## poetry version should agree with version in pyproject.toml

RUN pip3 install --upgrade pip
RUN pip install 'poetry==0.12.11'
WORKDIR /app
COPY pyproject.toml poetry.lock /app/

RUN poetry config settings.virtualenvs.create false && \
    poetry install --no-dev --no-ansi --no-interaction

FROM base AS release

ARG ELEKTRON_ENV=production

ADD project /app/project
ADD static /app/static
COPY etc/env/${ELEKTRON_ENV}.env /app/etc/env
COPY version.txt /app
COPY docker-entrypoint.sh /app

RUN chmod +x /app/docker-entrypoint.sh

EXPOSE 8000

ENTRYPOINT [ "/app/docker-entrypoint.sh" ]
