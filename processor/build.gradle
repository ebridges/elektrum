/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4.1/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/
apply plugin: 'java'

repositories {
    jcenter()
}

dependencies {
    testCompile(
            'org.junit.jupiter:junit-jupiter-api:5.4.0'
    )
    testRuntime(
            'org.junit.jupiter:junit-jupiter-engine:5.4.0',
    )
}
 
test {
    useJUnitPlatform()
}

dependencies {
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.4.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.4.0'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.24.5'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.11.1'

    // https://github.com/stefanbirkner/system-rules/issues/70
    testCompile 'com.github.stefanbirkner:system-rules:1.17.2'

    compile group: 'com.amazonaws', name: 'aws-lambda-java-events', version: '2.2.5'
    compile group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '1.2.0'
    compile group: 'org.jdbi', name: 'jdbi', version: '2.78'
    compile group: 'com.drewnoakes', name: 'metadata-extractor', version: '2.11.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.2'
    compile group: 'com.amazonaws', name: 'aws-lambda-java-log4j2', version: '1.0.0'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.5'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.500'
}


task fatJar(type: Jar) {
    manifest {
        attributes "Main-Class": "cc.roja.photo.ProcessorApp"
    }
    baseName = 'elektron-processor'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


task buildZip(type: Zip) {
    destinationDir=new File('out/production/archive')
    from compileJava
    from processResources              
    into('lib') {
        from configurations.runtime
    }           
}

build.dependsOn test
build.dependsOn buildZip
