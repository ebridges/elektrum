apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

idea {
    module {
        jdkName = '12'
    }
}

repositories {
    jcenter()
}

dependencies {
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.2'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.0.0'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.13.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.5.2'
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.2'
    testRuntime group: 'org.xerial', name: 'sqlite-jdbc', version: '3.28.0'

    compile group: 'com.amazonaws', name: 'aws-lambda-java-events', version: '2.2.7'
    compile group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '1.2.0'
    compile group: 'com.amazonaws', name: 'aws-lambda-java-log4j2', version: '1.1.0'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.633'
    compile group: 'software.amazon.awssdk', name: 'aws-sdk-java', version: '2.9.1'
    compile group: 'software.amazon.awssdk', name: 's3', version: '2.9.1'
    
    compile group: 'org.jdbi', name: 'jdbi3-core', version: '3.10.1'
    compile group: 'org.jdbi', name: 'jdbi3-sqlobject', version: '3.10.1'
    compile group: 'org.jdbi', name: 'jdbi3-postgres', version: '3.10.1'
    compile group: 'com.drewnoakes', name: 'metadata-extractor', version: '2.12.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.1'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.8'
}

test {
    useJUnitPlatform()
}

project.version project.findProperty('projVersion')?.trim() ?: 'DEV'


task fatJar(type: Jar) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
    zip64 true
    manifest {
        attributes "Main-Class": "cc.roja.photo.ProcessorApp"
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
        configurations.runtime.collect {
            it.isDirectory() ? it : zipTree(it)
        }
        configurations.testRuntime.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}


task buildZip(type: Zip) {
    // https://purpledevcat.com/2018/02/14/reproducible-builds-in-java.html
    preserveFileTimestamps = false
    reproducibleFileOrder = true
    destinationDirectory=new File('build/archives')
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtime
    }           
}

buildZip.dependsOn test
fatJar.dependsOn test
