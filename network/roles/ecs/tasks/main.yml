- name: lookup vpc id
  ec2_vpc_net_facts:
    filters:
      "tag:Service": "{{ service_name }}"
  register: vpc_facts

- debug:
    msg: "{{ vpc_facts }}"

- set_fact:
    vpc_id: "{{ vpc_facts.vpcs[0].vpc_id }}"

- name: look up security group ids
  ec2_group_facts:
    filters:
      vpc-id: "{{ vpc_id }}"
      "tag:Name": 
      - "allow-public-http"
      - "allow-public-ssh"
  register: sg

- name: output sg info
  debug:
    msg: "{{ sg }}"

- set_fact: 
    security_group_ids: "{{ sg.security_groups|map(attribute='group_id')|list }}"

- name: look up subnet ids
  ec2_vpc_subnet_facts:
    filters:
      vpc-id: "{{ vpc_id }}"
      "tag:Service": "{{ service_name }}"
      "tag:Visibility": "public"
  register: subnet_facts

- set_fact:
   subnet_ids: "{{ subnet_facts.subnets|map(attribute='subnet_id')|list }}"

- name: setup ecs cluster
  include_role:
    name: ecs-cluster
  vars:
    ecs_cluster_name: "{{ cluster_name }}"
    ecs_ssh_key_name: "{{ aws_ssh_key }}"
    ecs_security_groups: "{{ security_group_ids }}"
    ecs_vpc_subnets: "{{ subnet_ids }}"
    cloudwatch_namespace: "{{ logging_namespace }}"

- name: save cluster name
  lineinfile:
    path: "{{ config_info }}"
    regexp: '^ecs_cluster_name="{{ cluster_name }}"'
    line: 'ecs_cluster_name="{{ cluster_name }}"'

- name: save region name
  lineinfile:
    path: "{{ config_info }}"
    regexp: '^aws_region_name="{{ aws_region }}"'
    line: 'aws_region_name="{{ aws_region }}"'

- name: save task execution role
  lineinfile:
    path: "{{ config_info }}"
    regexp: '^ecs_task_exec_role="{{ ecs_instance_iam_role }}"'
    line: 'ecs_task_exec_role="{{ ecs_instance_iam_role }}"'
