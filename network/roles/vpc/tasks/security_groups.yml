---
# create a set of security groups
- debug: var=vpc_subnets_private

- debug: var=vpc_subnets_public

- debug: var=vpc_subnets['private-01']['cidr']

- debug: var=vpc_subnets['private-02']['cidr']

- name: create VPC security groups
  ec2_group:
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    vpc_id: "{{ vpc_id }}"
    rules: "{{ item.rules }}"
    tags:
      Service: "{{ service_name }}"
      Name: "{{ item.name }}"
      Environment: "{{ elektron_env }}"
  loop: "{{ vpc_security_groups }}"

# register facts related to the security groups

- name: look up private security group id
  ec2_group_facts:
    filters:
      "tag:Name": "{{ vpc_name }}-private-sg"
      "tag:Environment": "{{ elektron_env }}"
  register: private_security_group
- set_fact:
    private_security_group_id: "{{ private_security_group.security_groups[0].group_id }}"
- debug: var=private_security_group_id

- name: look up public security group id
  ec2_group_facts:
    filters:
      "tag:Name": "{{ vpc_name }}-public-sg"
      "tag:Environment": "{{ elektron_env }}"
  register: public_security_group
- set_fact:
    public_security_group_id: "{{ public_security_group.security_groups[0].group_id }}"
- debug: var=public_security_group_id

- name: look up nat security group id
  ec2_group_facts:
    filters:
      "tag:Name": "{{ vpc_name }}-nat-sg"
      "tag:Environment": "{{ elektron_env }}"
  register: nat_security_group
- debug: var=nat_security_group
- set_fact:
    nat_security_group_id: "{{ nat_security_group.security_groups[0].group_id }}"
