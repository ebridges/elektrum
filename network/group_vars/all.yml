# group_vars/all.yml
# ---

# override default, system python in order to use python in venv
ansible_python_interpreter: python3

# IP Address to allow access for SSH & PostgreSQL from:
home_ip: 98.116.39.58

# Admin info
admin_contact_name: "Edward Bridges"
admin_contact_email: "elektrum-admin@eqbridges.com"

service_name: elektrum

aws_region: us-east-1

# Used for generating the config file
config_info: "../etc/env/{{operating_env}}.env"

# Domain names
media_cname: "media.{{application_domain_name}}"
static_cname: "static.{{application_domain_name}}"
thumbnail_cname: "thumbnails.{{application_domain_name}}"

# Email Settings
dmarc_report_address: "dmarc-reports@eqbridges.com"

# S3 Facts
media_upload_bucket_name: "{{service_name}}-{{ operating_env }}-media"
media_thumbnail_bucket_name: "{{service_name}}-{{ operating_env }}-media-thumbnails"
artifact_bucket_name: "{{service_name}}-{{ operating_env }}-archive"
static_files_bucket_name: "{{service_name}}-{{ operating_env }}-static"

# Django Facts
django_email_backend: django_amazon_ses.EmailBackend
django_allowed_hosts: "{{ application_domain_name }},.execute-api.us-east-1.amazonaws.com,127.0.0.1,localhost"

# RDS Facts
rds_database_name: media_info
rds_instance_name: "{{service_name}}-{{operating_env}}-db"
rds_master_username: "{{service_name}}_{{operating_env}}_dba"
rds_app_username: "{{service_name}}_{{operating_env}}_usr"

# EC2 Facts
aws_ssh_key: "{{service_name}}-{{operating_env}}"
nat_instance_ami: ami-058436d7e072250b3
nat_instance_type: t2.micro

## Lambda deployment & config for Media Processor
media_processor_lambda_name: "{{ service_name }}-{{ operating_env }}-processor"
media_processor_lambda_arn: "arn:aws:lambda:{{ aws_region }}:{{ aws_account_id }}:function:{{ media_processor_lambda_name }}"
media_processor_lambda_handler: "cc.roja.photo.ProcessorRequestHandler"
media_processor_description: "Processes media uploaded to {{service_name}}"
media_processor_rolename: "{{service_name}}-{{operating_env}}-MediaProcessorRole"
media_processor_policy: "{{ service_name }}-{{ operating_env }}-MediaProcessorPolicy"
media_processor_connection_timeout: 120
media_processor_memory_size: 256
media_processor_tags: "Name={{ media_processor_lambda_name }};Service={{ service_name }};Environment={{ operating_env }}"
media_processor_runtime: "java11"
media_processor_subnet_ids: "{{ private_subnet_ids|join(',') }}"
media_processor_env: "DB_JDBC_URL=jdbc:postgresql://{{ db_endpoint_url }}:{{ db_port_number }}/{{ rds_database_name }};DB_USERNAME={{ rds_master_username }};DB_PASSWORD={{ rds_master_password }};AWS_UPLOAD_BUCKET_NAME={{ media_upload_bucket_name }};SENTRY_DSN={{ media_processor_monitoring_dsn }};OPERATING_ENV={{ operating_env }}"
media_processor_api_description: "API for media processor"

## Lambda deployment & config for Application Service (i.e. Django app)
application_service_lambda_name: "{{ service_name }}-{{ operating_env }}-application"
application_service_lambda_handler: "{{ service_name }}.lambda.handler"
application_service_description: "{{ service_name }} application service"
application_service_execution_rolename: "{{service_name}}-{{operating_env}}-ApplicationServiceExecutionRole"
application_service_integration_rolename: "{{service_name}}-{{operating_env}}-ApplicationServiceLoggingRole"
application_service_policy: "{{ service_name }}-{{ operating_env }}-ApplicationServicePolicy"
application_service_connection_timeout: 120
application_service_memory_size: 256
application_service_tags: "Name={{ application_service_lambda_name }};Service={{ service_name }};Environment={{ operating_env }}"
application_service_env: "DJANGO_LOG_LEVEL=INFO"
application_service_runtime: "python3.7"
application_service_subnet_ids: "{{ private_subnet_ids|join(',') }}"
application_service_api_description: "Public facing API for {{ application_service_lambda_name }}"

## Lambda deployment & config for Thumbnail Service
thumbnail_service_lambda_name: "{{ service_name }}-{{ operating_env }}-thumbnails"
thumbnail_service_description: "Retrieves a key from a bucket and writes out a resized version to a cache bucket."
thumbnail_service_lambda_handler: "thumbnailer.lambda.handler"
thumbnail_service_subnet_ids: "{{ private_subnet_ids|join(',') }}"
thumbnail_service_execution_rolename: "{{service_name}}-{{operating_env}}-ThumbnailServiceExecutionRole"
thumbnail_service_integration_rolename: "{{service_name}}-{{operating_env}}-ThumbnailServiceLoggingRole"
thumbnail_service_policy: "{{ service_name }}-{{ operating_env }}-ThumbnailServicePolicy"
thumbnail_service_tags: "Name={{ thumbnail_service_lambda_name }};Service={{ service_name }};Environment={{ operating_env }}"
thumbnail_service_api_description: "Public facing API for {{ thumbnail_service_lambda_name }}"
thumbnail_service_memory_size: 256
thumbnail_service_connection_timeout: 120
thumbnail_service_runtime: "python3.7"
thumbnail_service_binary_types: "image/jpeg,image/png,*/*"
thumbnail_service_response_models: "image/jpeg=Empty;image/png=Empty"
thumbnail_service_env: "MEDIA_UPLOAD_BUCKET_NAME={{media_upload_bucket_name}};MEDIA_THUMBS_BUCKET_NAME={{media_thumbnail_bucket_name}};SENTRY_DSN={{ thumbnail_service_monitoring_dsn }};OPERATING_ENV={{ operating_env }}"

## VPC Configuration
vpc_name: "{{service_name}}-{{operating_env}}-vpc"
vpc_subnets_private:
  - "{{vpc_subnets['private-01']['cidr']}}"
  - "{{vpc_subnets['private-02']['cidr']}}"
vpc_subnets_public:
  - "{{vpc_subnets['public-01']['cidr']}}"
  - "{{vpc_subnets['public-02']['cidr']}}"
