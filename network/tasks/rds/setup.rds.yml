- name: create a parameter group
  rds_param_group:
    state: present
    name: "{{ rds_parameter_group_name }}"
    description: "Parameters for {{ service_name }}"
    engine: "postgres10"
    region: "{{ aws_region }}"
    params:
      max_connections: "{{ rds_max_connections }}"
      shared_buffers: "{{ rds_shared_buffers }}"
      effective_cache_size: "{{ rds_effective_cache_size }}"
      work_mem: "{{ rds_work_mem }}"
    tags:
      Service: "{{ service_name }}"
      Name: "{{ rds_parameter_group_name }}"

- name: look up the security group id
  ec2_group_facts:
    filters:
      "tag:Name": "allow-public-postgres"
  register: rdssg

- name: output rds sg info
  debug:
    msg: "{{ rdssg }}"

- name: establish the RDS instance
  rds:
    command: create
    db_engine: postgres
    db_name: "{{ rds_database_name }}"
    port: "{{ rds_listen_port }}"
    size: "{{ rds_storage_size }}"
    iops: 1000 # determines ssd vs. magnetic storage
    region: "{{ aws_region }}"
    instance_type: "{{ rds_instance_type }}"
    instance_name: "{{ rds_instance_name }}"
    username: "{{ rds_master_username }}"
    password: "{{ rds_master_password }}"
    subnet: "{{ rds_subnet_group_name }}"
    vpc_security_groups: "{{ rdssg.security_groups[0].group_id }}"
    parameter_group: "{{ rds_parameter_group_name }}"
    publicly_accessible: yes
    upgrade: yes
    wait: yes
    wait_timeout: 3000 # 50 minutes
    tags:
      Service: "{{ service_name }}"
      Name: "{{ rds_instance_name }}"
  register: rds

- name: output rds info
  debug:
    msg: "{{ rds }}"

- name: write out database connect info
  local_action: shell printf 'hostname="{{ rds.instance.endpoint }}"\nport_num={{ rds.instance.port }}\ninstance="{{ rds.instance.id }}"\ndatabase="{{ rds.instance.db_name }}"\nusername="{{ rds.instance.username }}"\n' > "{{ rds_database_info }}"
